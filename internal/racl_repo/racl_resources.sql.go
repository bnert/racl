// Code generated by sqlc. DO NOT EDIT.
// source: racl_resources.sql

package racl_repo

import (
	"context"
)

const createResource = `-- name: CreateResource :one
insert into racl_resources (
  id  
) values (
  $1
) returning id, created_at, updated_at
`

func (q *Queries) CreateResource(ctx context.Context, id string) (RaclResource, error) {
	row := q.db.QueryRow(ctx, createResource, id)
	var i RaclResource
	err := row.Scan(&i.ID, &i.CreatedAt, &i.UpdatedAt)
	return i, err
}

const deleteResource = `-- name: DeleteResource :one
delete from racl_resources
where id = $1
returning id, created_at, updated_at
`

func (q *Queries) DeleteResource(ctx context.Context, id string) (RaclResource, error) {
	row := q.db.QueryRow(ctx, deleteResource, id)
	var i RaclResource
	err := row.Scan(&i.ID, &i.CreatedAt, &i.UpdatedAt)
	return i, err
}

const getResource = `-- name: GetResource :one
select id, created_at, updated_at
from racl_resources
where id = $1
`

func (q *Queries) GetResource(ctx context.Context, id string) (RaclResource, error) {
	row := q.db.QueryRow(ctx, getResource, id)
	var i RaclResource
	err := row.Scan(&i.ID, &i.CreatedAt, &i.UpdatedAt)
	return i, err
}
